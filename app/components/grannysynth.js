// Generated by CoffeeScript 2.5.1
(function() {
  var GrannySynth;

  GrannySynth = function(audio) {
    var arrs, dowindow, ws;
    arrs = null;
    ws = function(x) {
      return 1.5 * x - 0.5 * Math.pow(x, 3);
    };
    dowindow = function(x) {
      x = x % 1;
      return ws(ws(ws(ws(ws(1 - (.5 + .5 * Math.cos(x * 2 * Math.PI)))))));
    };
    return {
      setSource: function(waveform) {
        return arrs = waveform.extractRegion(0, waveform.getBuffer().length);
      },
      generateWaveform: async function(seed, length, grainLength) {
        var g, grainStart, i, j, out, outarrs, r, x;
        outarrs = [];
        i = 0;
        out = new Float32Array(length);
        while (i < length) {
          g = Math.floor(i / (grainLength * 2));
          r = i % grainLength;
          x = r / grainLength;
          grainStart = Math.floor(noise.pn(g + seed) * (arrs[0].length - grainLength * 1.5));
          out[i] = arrs[0][grainStart + r] * dowindow(x);
          j = i + Math.floor(grainLength / 2);
          g = Math.floor(j / (grainLength * 2));
          r = j % grainLength;
          x = r / grainLength;
          grainStart = Math.floor(noise.pn(g + seed) * (arrs[0].length - grainLength * 1.5));
          out[i] += arrs[0][grainStart + r] * dowindow(x) * .6;
          i++;
        }
        outarrs.push(out);
        return (await Waveform(audio).fromArray(outarrs));
      }
    };
  };

  window.GrannySynth = GrannySynth;

  module.exports = GrannySynth;

}).call(this);
